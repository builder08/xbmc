name: Android Build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # arm-linux-androideabi, aarch64-linux-android, i686-linux-android, x86_64-linux-android
        arch: [arm-linux-androideabi, aarch64-linux-android]
        # release or debug
        config: [release]
        ndk: [r21e]
        # "none" to skip,"all"  - all addons or space separated list of addons (with wildcard support): "audioencoder.flac pvr.vdr.vnsi audiodecoder.*"
        # See https://github.com/xbmc/xbmc/blob/master/cmake/addons/README.md#buildsystem-variables
        # List of supported addons: https://github.com/xbmc/repo-binary-addons
        addons: ["none"]

    runs-on: ubuntu-latest

    name: ${{matrix.arch}}-${{matrix.config}}
    env:
      CACHE_PATH: |
          ~/android-tools/xbmc-depends/
          tools/TexturePacker/
          tools/depends/

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 #full history is required for caching dependencies

    - name: Install libs
      run: |
        sudo apt-get install autoconf build-essential curl gawk git gperf lib32stdc++6 lib32z1 lib32z1-dev libcurl4-openssl-dev unzip zip zlib1g-dev

    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'

      # Add GitHub secret in repository Settings -> Secrets and Variables -> New repository secret
      # Name: ANDROID_KEYSTORE
      # Value: base64 encoded content of your keystore file
      # For example content of your.keystore.base64.txt file generated by
      # base64 your.keystore > your.keystore.base64.txt
    - name: Reuse ANDROID_KEYSTORE base64 encoded repository secret key
      env:
        ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
      if: env.ANDROID_KEYSTORE != null
      run: |
        sudo mkdir -p ~/.android/
        cd ~/.android/
        sudo bash -c 'echo "${{secrets.ANDROID_KEYSTORE}}" > debug.keystore.base64'
        sudo bash -c 'base64 -d debug.keystore.base64 > debug.keystore'

    - name: Generate new key
      env:
        ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
      if: env.ANDROID_KEYSTORE == null
      run: |
        sudo mkdir -p ~/.android/
        sudo keytool -genkey -keystore ~/.android/debug.keystore -v -alias androiddebugkey -dname "CN=Android Debug,O=Android,C=US" -keypass android -storepass android -keyalg RSA -keysize 2048 -validity 10000

      # Latest Android SDK and NDK are preinstalled.
      # Build is OK with latest SDK but needs lower NDK version:
    - name: Setup Android ${{matrix.ndk}} NDK
      run: |
        NDK_PATH=$HOME/android-ndk
        mkdir -p $NDK_PATH
        wget https://dl.google.com/android/repository/android-ndk-${{matrix.ndk}}-linux-x86_64.zip
        unzip android-ndk-${{matrix.ndk}}-linux-x86_64.zip -d $NDK_PATH
        echo "ANDROID_NDK_HOME=$NDK_PATH/android-ndk-${{matrix.ndk}}" >> $GITHUB_ENV

    - name: Obtain dependencies cache key
      run: |
        echo "CACHE_KEY=${{matrix.arch}}-${{matrix.config}}-${{matrix.ndk}}-$(git log --pretty=tformat:"%h" -n1 tools/depends)" >> $GITHUB_ENV

    - name: Restore dependencies from cache
      id: restore-tools
      uses: actions/cache/restore@v3
      with:
        path: ${{env.CACHE_PATH}}
        key: ${{env.CACHE_KEY}}

    - name: Build dependencies
      if: steps.restore-tools.outputs.cache-hit != 'true'
      env:
       IS_DEBUG: ${{ fromJSON('{"debug":"yes","release":"no"}')[matrix.config] }}
      run: |
        cd tools/depends
        ./bootstrap
        ./configure --with-tarballs=$HOME/android-tools/xbmc-tarballs --host=${{matrix.arch}} --with-sdk-path=$ANDROID_SDK_ROOT --with-ndk-path=$ANDROID_NDK_HOME --prefix=$HOME/android-tools/xbmc-depends --disable-ccache --enable-debug=${{env.IS_DEBUG}}
        make -j$(getconf _NPROCESSORS_ONLN)

    - name: Save dependencies to cache
      if: steps.restore-tools.outputs.cache-hit != 'true'
      id: cache-tools
      uses: actions/cache/save@v3
      with:
        path: ${{env.CACHE_PATH}}
        key: ${{steps.restore-tools.outputs.cache-primary-key}}

    - name: Build Binary Addons
      if: ${{matrix.addons != 'none'}}
      run: |
        make -j$(getconf _NPROCESSORS_ONLN) -C tools/depends/target/binary-addons ADDONS="${{matrix.addons}}"

    - name: Build Kodi
      run: |
        make -C tools/depends/target/cmakebuildsys
        cd build
        make -j$(getconf _NPROCESSORS_ONLN)
        make -j$(getconf _NPROCESSORS_ONLN) apk

    - name: Upload apk
      uses: actions/upload-artifact@v3
      with:
        name: kodi-${{matrix.arch}}.apk.zip
        path: kodi*.apk
