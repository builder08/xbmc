diff -ru lib/util/charset/iconv.c lib/util/charset/iconv.c
--- lib/util/charset/iconv.c	2013-01-29 09:49:31.000000000 +0100
+++ lib/util/charset/iconv.c	2015-03-28 08:30:53.191217266 +0100
@@ -24,6 +24,11 @@
 #include "system/filesys.h"
 #include "charset_proto.h"
 
+#if defined(ANDROID)
+#include <stdint.h>
+#include <byteswap.h>
+#endif
+
 #ifdef strcasecmp
 #undef strcasecmp
 #endif
@@ -532,6 +537,19 @@
 	return 0;
 }

+#if defined(ANDROID)
+void swab(const void *from, void*to, ssize_t n)
+{
+  ssize_t i;
+
+  if (n < 0)
+    return;
+
+  for (i = 0; i < (n/2)*2; i += 2)
+    *((uint16_t*)to+i) = bswap_16(*((uint16_t*)from+i));
+}
+#endif
+
 static size_t iconv_swab(void *cd, const char **inbuf, size_t *inbytesleft,
 			 char **outbuf, size_t *outbytesleft)
 {
diff -ru lib/util/util_pw.c lib/util/util_pw.c
--- lib/util/util_pw.c	2013-01-29 09:49:31.000000000 +0100
+++ lib/util/util_pw.c	2015-03-28 08:30:53.843217274 +0100
@@ -50,7 +50,9 @@
 	ret->pw_passwd = talloc_strdup(ret, from->pw_passwd);
 	ret->pw_uid = from->pw_uid;
 	ret->pw_gid = from->pw_gid;
+#if !defined(ANDROID)
 	ret->pw_gecos = talloc_strdup(ret, from->pw_gecos);
+#endif
 	ret->pw_dir = talloc_strdup(ret, from->pw_dir);
 	ret->pw_shell = talloc_strdup(ret, from->pw_shell);
 
diff -ru nsswitch/libwbclient/wbc_pwd.c nsswitch/libwbclient/wbc_pwd.c
--- nsswitch/libwbclient/wbc_pwd.c	2013-01-29 09:49:31.000000000 +0100
+++ nsswitch/libwbclient/wbc_pwd.c	2015-03-28 08:30:53.847217275 +0100
@@ -46,7 +46,9 @@
 	struct passwd *pw = (struct passwd *)ptr;
 	free(pw->pw_name);
 	free(pw->pw_passwd);
+#if !defined(ANDROID)
 	free(pw->pw_gecos);
+#endif
 	free(pw->pw_shell);
 	free(pw->pw_dir);
 }
@@ -68,10 +70,12 @@
 	if (pw->pw_passwd == NULL) {
 		goto fail;
 	}
+#if !defined(ANDROID)
 	pw->pw_gecos = strdup(p->pw_gecos);
 	if (pw->pw_gecos == NULL) {
 		goto fail;
 	}
+#endif
 	pw->pw_shell = strdup(p->pw_shell);
 	if (pw->pw_shell == NULL) {
 		goto fail;
diff -ru nsswitch/libwbclient/wbc_sid.c nsswitch/libwbclient/wbc_sid.c
--- nsswitch/libwbclient/wbc_sid.c	2013-01-29 09:49:31.000000000 +0100
+++ nsswitch/libwbclient/wbc_sid.c	2015-03-28 08:30:53.847217275 +0100
@@ -1040,9 +1040,11 @@
 
 		wbcFreeMemory(name);
 
+#if !defined(ANDROID)
 		name = wbcStrDup(pwd->pw_gecos);
 		wbcFreeMemory(pwd);
 		BAIL_ON_PTR_ERROR(name, wbc_status);
+#endif
 	}
 
 	wbc_status = WBC_ERR_SUCCESS;
diff -ru source3/lib/dumpcore.c source3/lib/dumpcore.c
--- source3/lib/dumpcore.c
+++ source3/lib/dumpcore.c
@@ -306,7 +306,7 @@
 	umask(~(0700));
 	dbgflush();
 
-#if defined(HAVE_PRCTL) && defined(PR_SET_DUMPABLE)
+#if defined(HAVE_PRCTL) && defined(PR_SET_DUMPABLE) && !defined(ANDROID)
 	/* On Linux we lose the ability to dump core when we change our user
 	 * ID. We know how to dump core safely, so let's make sure we have our
 	 * dumpable flag set.
diff -ru source3/lib/system.c source3/lib/system.c
--- source3/modules/vfs_default.c
+++ source3/modules/vfs_default.c
@@ -455,7 +455,9 @@
 static void vfswrap_seekdir(vfs_handle_struct *handle, DIR *dirp, long offset)
 {
 	START_PROFILE(syscall_seekdir);
+#if !defined(ANDROID)
 	seekdir(dirp, offset);
+#endif
 	END_PROFILE(syscall_seekdir);
 }
 
@@ -463,7 +465,11 @@
 {
 	long result;
 	START_PROFILE(syscall_telldir);
+#if !defined(ANDROID)
 	result = telldir(dirp);
+#else
+	result = 0;
+#endif
 	END_PROFILE(syscall_telldir);
 	return result;
 }
diff -ru lib/addns/dnsquery.c lib/addns/dnsquery.c
--- lib/addns/dnsquery.c
+++ lib/addns/dnsquery.c
@@ -41,6 +41,16 @@
 
 #define MAX_DNS_PACKET_SIZE 0xffff
 
+#if defined(ANDROID)
+#  define NS_HFIXEDSZ   12
+#  define C_IN          1
+#  define T_A           1
+#  define ns_t_srv      33
+#  define ns_t_aaaa     28
+#  define NS_PACKETSZ	512
+#  define T_NS          2
+#endif
+
 #ifdef NS_HFIXEDSZ	/* Bind 8/9 interface */
 #if !defined(C_IN)	/* AIX 5.3 already defines C_IN */
 #  define C_IN		ns_c_in
diff -ru source3/passdb/passdb.c source3/passdb/passdb.c
--- source3/passdb/passdb.c	2013-01-29 09:49:31.000000000 +0100
+++ source3/passdb/passdb.c	2015-03-28 08:30:54.543217284 +0100
@@ -147,6 +147,7 @@
 
 	fullname = NULL;
 
+#if !defined(ANDROID)
 	if (count_commas(pwd->pw_gecos) == 3) {
 		/*
 		 * Heuristic: This seems to be a gecos field that has been
@@ -157,11 +158,14 @@
 			talloc_tos(), pwd->pw_gecos,
 			strchr(pwd->pw_gecos, ',') - pwd->pw_gecos);
 	}
+#endif
 
 	if (fullname != NULL) {
 		pdb_set_fullname(user, fullname, PDB_SET);
+#if !defined(ANDROID)
 	} else {
 		pdb_set_fullname(user, pwd->pw_gecos, PDB_SET);
+#endif
 	}
 	TALLOC_FREE(fullname);
 
diff -ru source3/passdb/pdb_interface.c source3/passdb/pdb_interface.c
--- source3/passdb/pdb_interface.c	2013-01-29 09:49:31.000000000 +0100
+++ source3/passdb/pdb_interface.c	2015-03-28 08:30:54.547217284 +0100
@@ -1607,8 +1607,8 @@
 	}
 
 	/* Primary group members */
-	setpwent();
-	while ((pwd = getpwent()) != NULL) {
+	sys_setpwent();
+	while ((pwd = sys_getpwent()) != NULL) {
 		if (pwd->pw_gid == gid) {
 			if (!add_uid_to_array_unique(mem_ctx, pwd->pw_uid,
 						pp_uids, p_num)) {
@@ -1616,7 +1616,7 @@
 			}
 		}
 	}
-	endpwent();
+	sys_endpwent();
 
 	/* Secondary group members */
 	for (gr = grp->gr_mem; (*gr != NULL) && ((*gr)[0] != '\0'); gr += 1) {
