ARCH=@ARCH@

SRCS= \
  alpha.cpp \
  clusterfit.cpp \
  colourblock.cpp \
  colourfit.cpp \
  colourset.cpp \
  maths.cpp \
  rangefit.cpp \
  singlecolourfit.cpp \
  squish.cpp

LIB              = libsquish.a
NATIVE_LIB       = libsquish-native.so
CLEAN_FILES     += $(NATIVE_LIB)

HOST_CXX        ?= g++
CXXFLAGS        += -I.
HOST_CXXFLAGS   += -I.

ifeq ($(findstring powerpc,$(ARCH)),powerpc)
  CXXFLAGS      += -DSQUISH_USE_ALTIVEC=1 -maltivec
  HOST_CXXFLAGS += -DSQUISH_USE_ALTIVEC=1 -maltivec
else ifeq ($(findstring x86,$(ARCH)), x86)
  CXXFLAGS      += -DSQUISH_USE_SSE=2 -msse2
  HOST_CXXFLAGS += -DSQUISH_USE_SSE=2 -msse2
endif

ifeq ($(findstring osx,$(ARCH)),osx)
  HOST_CXXFLAGS += $(shell echo $(CXXFLAGS) | grep x86_64 >/dev/null && echo -m64 || echo -m32)
endif

$(LIB): $(SRCS)

# TexturePacker links to libsquish and needs to run on build system, so make a native flavor.
$(NATIVE_LIB): $(SRCS)
ifeq ($(findstring osx,$(ARCH)),osx)
	$(HOST_CXX) $(HOST_CXXFLAGS) $(SRCS) -dynamiclib -install_name `pwd`/libsquish-native.so -o $@
else
	$(HOST_CXX) $(HOST_CXXFLAGS) $(SRCS) -shared -fPIC -Wl,-soname,`pwd`/libsquish-native.so -o $@
endif

include ../../Makefile.include
-include $(patsubst %.cpp,%.P,$(patsubst %.c,%.P,$(SRCS)))
